{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport FormScreen from \"./screens/FormScreen\";\nimport IndexScreen from \"./screens/IndexScreen\";\nimport DetailsScreen from \"./screens/DetailsScreen\";\nimport * as constant from \"./controllers/constants\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar adjustedTheme = _objectSpread({}, DefaultTheme);\nfunction MyStack() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: constant.backgroundColor\n      },\n      headerTintColor: constant.headerTintColor\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"LoginScreen\",\n      component: LoginScreen,\n      options: {\n        title: 'Welcome'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"IndexScreen\",\n      component: IndexScreen,\n      options: {\n        title: 'Meeting List'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"FormScreen\",\n      component: FormScreen,\n      options: {\n        title: 'Add Meeting'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"DetailsScreen\",\n      component: DetailsScreen,\n      options: {\n        title: 'Update Meeting'\n      }\n    })]\n  });\n}\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    theme: adjustedTheme,\n    children: _jsx(MyStack, {})\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","DefaultTheme","createStackNavigator","FormScreen","IndexScreen","DetailsScreen","constant","LoginScreen","jsx","_jsx","jsxs","_jsxs","Stack","adjustedTheme","_objectSpread","MyStack","Navigator","screenOptions","headerStyle","backgroundColor","headerTintColor","children","Screen","name","component","options","title","App","theme"],"sources":["C:/Users/tuanv/Desktop/react-android/App.js"],"sourcesContent":["import * as React from 'react';\nimport { NavigationContainer, DefaultTheme  } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\n// Import Screens files.\nimport FormScreen from './screens/FormScreen';\nimport IndexScreen from './screens/IndexScreen';\nimport DetailsScreen from './screens/DetailsScreen';\n\n// Import constants.js\nimport * as constant from './controllers/constants'\nimport LoginScreen from './screens/LoginScreen';\n\n// Declaration of the navigator stack.\nconst Stack = createStackNavigator();\n\nconst adjustedTheme = {\n  ...DefaultTheme,\n  // colors: {\n  //   ...DefaultTheme.colors,\n  //   primary: '#E37399'\n  // },\n};\n\nfunction MyStack() {\n  return (\n    <Stack.Navigator\n      screenOptions = {{\n          headerStyle: {\n            backgroundColor: constant.backgroundColor,\n          },\n          headerTintColor: constant.headerTintColor,\n        }}\n      >\n      <Stack.Screen \n        name = \"LoginScreen\" \n        component = {LoginScreen} \n        options = {{ title: 'Welcome' }}\n      />\n      <Stack.Screen \n        name = \"IndexScreen\" \n        component = {IndexScreen} \n        options = {{ title: 'Meeting List' }}\n      />\n      <Stack.Screen \n        name = \"FormScreen\" \n        component = {FormScreen} \n        options = {{ title: 'Add Meeting' }}\n      />\n      <Stack.Screen \n       name = \"DetailsScreen\" \n       component = {DetailsScreen} \n       options = {{ title: 'Update Meeting' }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer theme = {adjustedTheme}>\n      <MyStack />\n    </NavigationContainer>\n  );\n}"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,mBAAmB,EAAEC,YAAY,QAAS,0BAA0B;AAC7E,SAASC,oBAAoB,QAAQ,yBAAyB;AAG9D,OAAOC,UAAU;AACjB,OAAOC,WAAW;AAClB,OAAOC,aAAa;AAGpB,OAAO,KAAKC,QAAQ;AACpB,OAAOC,WAAW;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGhD,IAAMC,KAAK,GAAGV,oBAAoB,CAAC,CAAC;AAEpC,IAAMW,aAAa,GAAAC,aAAA,KACdb,YAAY,CAKhB;AAED,SAASc,OAAOA,CAAA,EAAG;EACjB,OACEJ,KAAA,CAACC,KAAK,CAACI,SAAS;IACdC,aAAa,EAAI;MACbC,WAAW,EAAE;QACXC,eAAe,EAAEb,QAAQ,CAACa;MAC5B,CAAC;MACDC,eAAe,EAAEd,QAAQ,CAACc;IAC5B,CAAE;IAAAC,QAAA,GAEJZ,IAAA,CAACG,KAAK,CAACU,MAAM;MACXC,IAAI,EAAG,aAAa;MACpBC,SAAS,EAAIjB,WAAY;MACzBkB,OAAO,EAAI;QAAEC,KAAK,EAAE;MAAU;IAAE,CACjC,CAAC,EACFjB,IAAA,CAACG,KAAK,CAACU,MAAM;MACXC,IAAI,EAAG,aAAa;MACpBC,SAAS,EAAIpB,WAAY;MACzBqB,OAAO,EAAI;QAAEC,KAAK,EAAE;MAAe;IAAE,CACtC,CAAC,EACFjB,IAAA,CAACG,KAAK,CAACU,MAAM;MACXC,IAAI,EAAG,YAAY;MACnBC,SAAS,EAAIrB,UAAW;MACxBsB,OAAO,EAAI;QAAEC,KAAK,EAAE;MAAc;IAAE,CACrC,CAAC,EACFjB,IAAA,CAACG,KAAK,CAACU,MAAM;MACZC,IAAI,EAAG,eAAe;MACtBC,SAAS,EAAInB,aAAc;MAC3BoB,OAAO,EAAI;QAAEC,KAAK,EAAE;MAAiB;IAAE,CACvC,CAAC;EAAA,CACa,CAAC;AAEtB;AAEA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,OACElB,IAAA,CAACT,mBAAmB;IAAC4B,KAAK,EAAIf,aAAc;IAAAQ,QAAA,EAC1CZ,IAAA,CAACM,OAAO,IAAE;EAAC,CACQ,CAAC;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}